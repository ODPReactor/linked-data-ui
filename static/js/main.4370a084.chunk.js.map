{"version":3,"sources":["../../src/icon/classes/LeafletIconParams.js","../../src/icon/functions/leafletIcon.js","../../src/icon/uri-encoded-icons/blu-marker.svg.uri.js","../../src/icon/custom-leaflet-icons/blueMarkerIcon.js","../../src/icon/custom-leaflet-icons/redSquatMarkerIcon.js","../../src/icon/uri-encoded-icons/squat-marker-red.svg.uri.js","../../src/icon/custom-leaflet-icons/blackArrowheadIcon.js","../../src/icon/uri-encoded-icons/black-arrowhead-pointing-up.svg.uri.js","../../src/icon/functions/htmlIcon.js","../../src/visualframes/timeindexedtypedlocation/config.js","../../src/icon/custom-html-icons/blueClusterMarkerIcon.js","../../src/visualframes/timeindexedtypedlocation/tITLPopup.js","../../src/icon/custom-html-icons/museumIcon.js","../../src/icon/uri-encoded-icons/museum-icon.svg.uri.js","../../src/icon/custom-html-icons/timeIcon.js","../../src/icon/uri-encoded-icons/clock-calendar.svg.uri.js","../../src/icon/custom-html-icons/locationIcon.js","../../src/icon/uri-encoded-icons/location.svg.uri.js","../../src/base/d3leaflet.js","../../src/visualframes/timeindexedtypedlocation/TimeIndexedTypedLocation.jsx","../../src/base/ld-ui-hooks.js","../../src/base/math.js","../../src/visualframes/collection/Entity.js","../../src/resources/extractLabelFromUri.js","../../src/visualframes/collection/Collection.jsx","../../src/resources/EndpointConfig.js","../../src/resources/Depiction.jsx","../../src/resources/Resource.jsx","../../src/resources/Label.jsx","../../src/visualframes/partwhole/PartWhole.jsx","pages/examples/CollectionExample.js","pages/examples/CollectionExample2.js","pages/examples/TimeIndexedTypedLocationExample.js","pages/examples/PartWholeExample.js","pages/VisualFrameExamples.js","App.js","index.js"],"names":["constructor","this","params","L","leafletIcon","svg","blueMarkerIcon","iconUrl","className","iconAnchor","popupAnchor","htmlIcon","src","message","customClass","CONFIG","MARKER_ICON","ARROW","COLOR","HEAD_COLOR","FILL_COLOR","SIZE","ARROWHEAD_SIZE","POPUP","OPEN","CLOSE","OPEN_CLUSTER","MAP","PROVIDER","ATTRIBUTION","TRANSITION_DURATION","DEFAULT_PROVIDER","tITLPopup","content","timeIcon","locationIcon","locationType","getLayerPoint","d","map","x","y","TimeIndexedTypedLocation","styles","mapStyle","height","width","popupStyle","onObjectClick","mapRef","useRef","mapProvider","useEffect","center","zoom","layers","attribution","zoomControl","attributionControl","useMap","url","paneName","paneZIndex","usePane","transform","path","point","d3","geometries","timeIndexedTypedLocations","tITL","bounds","topLeft","fitSvg","g","depiction","geoJSON","arrowheadsNodes","arrowheads","a","i","rotationAngle","p1","p2","diffY","diffX","Math","getAngle","linePath","moveLine","t","l","interpolate","p","arrow","tolerance","x_range","_","parseInt","y_range","passOver","mcg","iconCreateFunction","cluster","html","e","type","features","b","sortByTime","geometry","coordinates","parseFloat","markerPosition","popupContent","timeInterval","startTime","culturalProperty","address","addressLabel","popup","icon","cProp","document","console","padding","maxZoom","cPropDepiction","adaptD3Layer","id","style","Entity","props","flexFlow","entityContainer","entityDepictionContainer","entityDepiction","entityLabel","uri","tmp","tmp2","property","extractLabelFromUri","Collection","classes","collectionContainerWidth","members","entity","key","defaultStyles","collectionContainer","border","margin","display","gridTemplateColumns","gridGap","borderRadius","textAlign","paddingTop","boxSizing","position","entityContent","color","left","top","PathFactory","require","context","friends","label","queryEngine","ComunicaEngine","default","value","namedNode","Depiction","placeholderImg","useState","subject","onLoadedDepiction","image","setImage","onClick","Resource","Label","text","setLabel","PartWhole","onResourceClick","containerStyle","littleItemStyle","centerItemStyle","circleContainer","circle","circleElements","angle","dangle","circleElement","partWidth","wholeWidth","imgWidth","partStyle","wholeContainerStyle","centerStyle","right","bottom","labelStyle","centerLabelStyle","setDepictionCount","depictionCount","ref","parts","part","itemLabel","whole","centerLabel","defaultItemLabelStyle","minWidth","backgroundColor","defaultCenterLabelStyle","CollectionExample","CollectionExample2","TimeIndexedTypedLocationExample","titls","cPropLabel","endTime","lat","locationTypeLabel","long","tITLLabel","titl","PartWholeExample","h1","marginTop","h2","h3","last","marginBottom","VisualFrameExamples","Header","as","Grid","container","columns","stackable","Column","Segment","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4370a084.chunk.js","sourcesContent":["import L from 'leaflet';\n\n/**\n * Params used to build a leaflet icon.\n * Constructor will override default params\n */\nexport default class LeafletIconParams {\n    /**\n     * @param {Object} params a JSON object with params as attributes.\n     * Params keys:\n     * @param {string} iconUrl the path to iconUrl\n     * @param {string} iconRetinaUrl\n     * @param {number[]} iconAnchor by default top left corner of icon points to provided coordinates, change this to move your icon\n     * @param {*} popupAnchor\n     * @param {*} shadowUrl\n     * @param {*} shadowSize\n     * @param {*} shadowAnchor\n     * @param {number} iconWidth the width of the icon\n     * @param {number} iconHeight the heigth of the icon\n     * @param {string} className css class\n     */\n    constructor(params) {\n        this.iconUrl = params.iconUrl;\n        this.iconRetinaUrl = params.iconRetinaUrl;\n        this.iconAnchor = params.iconAnchor;\n        this.popupAnchor = params.popupAnchor;\n        this.shadowUrl = params.shadowUrl;\n        this.shadowSize = params.shadowSize;\n        this.shadowAnchor = params.shadowAnchor;\n        this.iconSize = new L.Point(params.iconWidth, params.iconHeight);\n        this.className = params.className;\n    }\n}\n","import * as L from \"leaflet\"\nimport LeafletIconParams from \"../classes/LeafletIconParams\"\n\nexport default function leafletIcon(params) {\n    return new L.Icon(new LeafletIconParams(params))\n}","const svg = 'data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 21.023 32.743\\'%3e%3cdefs%3e%3cradialGradient id=\\'a\\' gradientUnits=\\'userSpaceOnUse\\' cx=\\'12.5\\' cy=\\'2.335\\' r=\\'9.963\\' gradientTransform=\\'matrix(.99167 .00416 -.0042 .99999 .114 -.052)\\'%3e%3cstop offset=\\'0\\' stop-color=\\'white\\'/%3e%3cstop offset=\\'1\\' stop-color=\\'%23004dff\\'/%3e%3c/radialGradient%3e%3c/defs%3e%3cg opacity=\\'.65\\'%3e%3cpath d=\\'M10.355.443c5.577-.088 10.17 4.354 10.257 9.923.063 3.992-2.22 7.472-5.564 9.16l-4.2 12.07c-1.696-3.96-3.235-7.979-4.747-12.011C2.796 17.97.48 14.61.417 10.685.329 5.115 4.777.531 10.356.443z\\' stroke=\\'black\\' fill=\\'%23195fff\\' stroke-width=\\'.843\\'/%3e%3cpath d=\\'M21.964 11.5a9.464 9.464 0 11-18.929 0 9.464 9.464 0 0118.929 0z\\' transform=\\'scale(-.9308 .9308) rotate(18.53 1.138 -61.525)\\' fill=\\'url(%23a)\\'/%3e%3c/g%3e%3c/svg%3e'; export default svg; ","import leafletIcon from '../functions/leafletIcon';\nimport LeafletIconParams from '../classes/LeafletIconParams';\n\nimport svg from '../uri-encoded-icons/blu-marker.svg.uri';\n\nconst blueMarkerIconParams = new LeafletIconParams({\n    iconUrl: svg,\n    className: 'ld-ui-div-icon',\n    iconAnchor: [15, 50],\n    popupAnchor: [0, -50],\n});\n\n/**\n * Marker icon\n */\nconst blueMarkerIcon = leafletIcon(blueMarkerIconParams);\n\nexport default blueMarkerIcon;\n","import leafletIcon from '../functions/leafletIcon';\nimport LeafletIconParams from '../classes/LeafletIconParams';\n\nimport svg from '../uri-encoded-icons/squat-marker-red.svg.uri';\n\nconst redMarkerIconParams = new LeafletIconParams({\n    iconUrl: svg,\n    className: 'ld-ui-div-icon',\n    iconAnchor: [15, 50],\n    popupAnchor: [0, -50],\n});\n\n/**\n * Marker icon\n */\nconst redSquatMarkerIcon = leafletIcon(redMarkerIconParams);\n\nexport default redSquatMarkerIcon;\n","const svg = 'data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 25 39\\'%3e%3cdefs%3e%3cradialGradient id=\\'a\\' gradientUnits=\\'userSpaceOnUse\\' cy=\\'2.335\\' cx=\\'12.5\\' gradientTransform=\\'matrix(.99167 .00416 -.0042 .99999 .114 -.052)\\' r=\\'9.963\\'%3e%3cstop offset=\\'0\\' stop-color=\\'red\\' stop-opacity=\\'0\\'/%3e%3cstop offset=\\'1\\' stop-color=\\'red\\'/%3e%3c/radialGradient%3e%3c/defs%3e%3cpath d=\\'M12.5.5C5.883.5.52 5.855.52 12.462c0 4.736 2.773 8.82 6.771 10.759l5.208 14.238c1.937-4.729 3.687-9.524 5.404-14.335 3.891-1.976 6.576-6.004 6.576-10.662C24.479 5.855 19.116.5 12.499.5z\\' stroke=\\'black\\' fill=\\'white\\'/%3e%3cpath d=\\'M21.964 11.5a9.464 9.464 0 11-18.929 0 9.464 9.464 0 1118.929 0z\\' transform=\\'translate(-1.302 -.2) scale(1.1041)\\' fill=\\'url(%23a)\\'/%3e%3c/svg%3e'; export default svg; ","import leafletIcon from '../functions/leafletIcon';\nimport LeafletIconParams from '../classes/LeafletIconParams';\n\nimport svg from '../uri-encoded-icons/black-arrowhead-pointing-up.svg.uri';\n\nconst blackArrowHeadIconParams = new LeafletIconParams({\n    iconUrl: svg,\n    className: 'ld-ui-div-icon',\n    iconAnchor: [15, 50],\n    popupAnchor: [0, -50],\n});\n\nconst blackArrowHeadIcon = leafletIcon(blackArrowHeadIconParams);\n\nexport default blackArrowHeadIcon;\n","const svg = 'data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 237.64 237.64\\'%3e%3cpath d=\\'M7.954 226.53c-2.23 4.623-2.295 8.072-.609 9.915 3.911 4.275 15.926-3.905 23.323-9.051l58.416-40.662c7.397-5.145 20.402-11.835 29.414-11.993a64.14 64.14 0 012.703.011c9.007.218 21.958 7.016 29.3 12.238l56.403 40.151c7.343 5.221 19.303 13.473 23.301 9.219 1.74-1.849 1.751-5.33-.381-9.997L129.648 7.047c-4.264-9.333-11.335-9.404-15.79-.163L7.954 226.53z\\' fill=\\'%23010002\\'/%3e%3c/svg%3e'; export default svg; ","export default function htmlIcon(src, message, customClass = \"\") {\n    return `\n            <i>\n                <img\n                    class=\"ld-ui-div-icon\"\n                    src=\"${src}\"\n                 class=\"simple-icon\"\n                ></img>\n                <p class=\"icon-description ${customClass}\">${message}</p>\n                <br />\n            </i>\n            `;\n}\n","import {\n    blueMarkerIcon,\n    blueClusterMarkerIcon,\n    redSquatMarkerIcon,\n    redSquatClusterMarkerIcon,\n} from \"../../icon/ld-ui-icon\";\n\nconst DARK_PROVIDER = 0;\nconst DAY_PROVIDER = 1;\n\nconst CONFIG = {\n    MARKER_ICON: [blueMarkerIcon, blueClusterMarkerIcon],\n    ARROW: {\n        COLOR: \"blue\",\n        HEAD_COLOR: \"blue\",\n        FILL_COLOR: \"blue\",\n        SIZE: \"20px\",\n        ARROWHEAD_SIZE: 100,\n    },\n    POPUP: {\n        OPEN: \"mouseover\",\n        CLOSE: \"mouseout\",\n        OPEN_CLUSTER: \"clustermouseover\",\n    },\n    MAP: [\n        {\n            PROVIDER:\n                \"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\",\n            ATTRIBUTION:\n                '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n        },\n        {\n            PROVIDER: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            ATTRIBUTION:\n                '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n        },\n    ],\n    TRANSITION_DURATION: 2000,\n    DEFAULT_PROVIDER: DAY_PROVIDER,\n};\n\nexport default CONFIG;\n","import htmlIcon from '../functions/htmlIcon';\n\nimport svg from '../uri-encoded-icons/blu-marker.svg.uri';\n\nexport default function blueClusterMarkerIcon(message) {\n    return htmlIcon(svg, message);\n}\n","import { museumIcon, timeIcon, locationIcon } from \"../../icon/ld-ui-icon\";\n\n// ${museumIcon(`${content.siteLabel} (${content.city})`)}\n\nexport default function tITLPopup(content) {\n    return `<div class=\"tITL-popup\" style=\"pointer-events: auto;transition: 0.7s;\">\n                ${museumIcon(content.culturalProperty)}\n                ${timeIcon(content.timeInterval)}\n                ${locationIcon(`${content.locationType} (${content.address})`)}\n            </div>\n            `;\n}\n","import htmlIcon from \"../functions/htmlIcon\";\n\nimport svg from \"../uri-encoded-icons/museum-icon.svg.uri\";\n\nexport default function museumIcon(message) {\n    return htmlIcon(svg, message, \"cultural-property\");\n}\n","const svg = 'data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 100 94.907\\' version=\\'1.0\\'%3e%3cpath d=\\'M91.053 80.785V32.18H78.229v48.605h-10.26V32.18H55.145v48.605h-10.26V32.18H32.06v48.605H21.8V32.18H8.976v48.605h-.014L0 94.907l100-.016zM2.549 26.827h94.902L49.998 0z\\'/%3e%3c/svg%3e'; export default svg; ","import htmlIcon from '../functions/htmlIcon';\n\nimport svg from '../uri-encoded-icons/clock-calendar.svg.uri';\n\nexport default function museumIcon(message) {\n    return htmlIcon(svg, message);\n}\n","const svg = 'data:image/svg+xml,%3csvg xmlns=\\'http://www.w3.org/2000/svg\\' xmlns:xlink=\\'http://www.w3.org/1999/xlink\\' width=\\'728.939\\' height=\\'863.198\\' viewBox=\\'0 0 683.38 809.248\\'%3e%3cdefs%3e%3clinearGradient id=\\'c\\'%3e%3cstop offset=\\'0\\' stop-opacity=\\'.793\\'/%3e%3cstop offset=\\'1\\' stop-opacity=\\'.464\\'/%3e%3c/linearGradient%3e%3clinearGradient id=\\'b\\'%3e%3cstop offset=\\'0\\'/%3e%3cstop offset=\\'.68\\' stop-color=\\'%23515151\\' stop-opacity=\\'.498\\'/%3e%3cstop offset=\\'1\\' stop-color=\\'%23515151\\' stop-opacity=\\'0\\'/%3e%3c/linearGradient%3e%3clinearGradient id=\\'a\\'%3e%3cstop offset=\\'0\\' stop-color=\\'%23515151\\'/%3e%3cstop offset=\\'.5\\' stop-color=\\'%23515151\\'/%3e%3cstop offset=\\'1\\' stop-color=\\'%23515151\\' stop-opacity=\\'.614\\'/%3e%3c/linearGradient%3e%3clinearGradient xlink:href=\\'%23a\\' id=\\'e\\' x1=\\'282.511\\' y1=\\'190.134\\' x2=\\'612.298\\' y2=\\'-139.653\\' gradientUnits=\\'userSpaceOnUse\\' gradientTransform=\\'translate(-1154.524 130.567) scale(.99456)\\'/%3e%3clinearGradient xlink:href=\\'%23b\\' id=\\'f\\' x1=\\'437.585\\' y1=\\'34.536\\' x2=\\'623.326\\' y2=\\'-177.071\\' gradientUnits=\\'userSpaceOnUse\\' gradientTransform=\\'translate(-1157.143 130.611)\\'/%3e%3clinearGradient xlink:href=\\'%23c\\' id=\\'g\\' x1=\\'-622.314\\' y1=\\'330.715\\' x2=\\'-1166.078\\' y2=\\'742.933\\' gradientUnits=\\'userSpaceOnUse\\'/%3e%3cclipPath clipPathUnits=\\'userSpaceOnUse\\' id=\\'d\\'%3e%3cpath d=\\'M-896.765-98.136l4.735 255.92 255.632-.226c16.296-.014 31.643 6.962 40.835 16.62 10.538 11.07 16.852 23.237 16.758 43.027l-.04 150.593h151.8V-98.136z\\' opacity=\\'.643\\' fill=\\'aqua\\' stroke-width=\\'.938\\'/%3e%3c/clipPath%3e%3c/defs%3e%3cg transform=\\'translate(1158.143 78.743)\\'%3e%3crect ry=\\'34.505\\' y=\\'180.068\\' x=\\'-1133.481\\' height=\\'529.589\\' width=\\'532.318\\' fill=\\'none\\' stroke=\\'%23515151\\' stroke-width=\\'44.786\\' stroke-linecap=\\'round\\' stroke-linejoin=\\'bevel\\' paint-order=\\'stroke fill markers\\'/%3e%3ccircle r=\\'182.606\\' cy=\\'122.531\\' cx=\\'-676.036\\' clip-path=\\'url(%23d)\\' fill=\\'none\\' stroke=\\'url(%23e)\\' stroke-width=\\'33.952\\' stroke-linejoin=\\'round\\' stroke-dasharray=\\'203.7093733%2c33.95156221\\'/%3e%3ccircle r=\\'17.645\\' cy=\\'122.531\\' cx=\\'-676.036\\'/%3e%3cpath d=\\'M-714.176-22.357l36.526 144.888 99.533 31.98\\' fill=\\'none\\' stroke=\\'url(%23f)\\' stroke-width=\\'16.062\\' stroke-linecap=\\'round\\'/%3e%3crect width=\\'60.224\\' height=\\'121.092\\' x=\\'-1025.117\\' y=\\'137.531\\' ry=\\'25.948\\' fill=\\'%23515151\\' stroke=\\'white\\' stroke-width=\\'14.908\\' stroke-linecap=\\'round\\' stroke-linejoin=\\'bevel\\'/%3e%3crect ry=\\'25.948\\' y=\\'137.531\\' x=\\'-792.25\\' height=\\'121.092\\' width=\\'60.224\\' fill=\\'%23515151\\' stroke=\\'white\\' stroke-width=\\'14.908\\' stroke-linecap=\\'round\\' stroke-linejoin=\\'bevel\\'/%3e%3cg transform=\\'translate(-95.846 48.557) scale(.88985)\\' fill=\\'white\\' stroke=\\'url(%23g)\\' stroke-width=\\'4.688\\' opacity=\\'.792\\' stroke-linecap=\\'round\\' stroke-linejoin=\\'bevel\\'%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-909.574\\' y=\\'330.715\\' ry=\\'16.873\\'/%3e%3crect ry=\\'16.873\\' y=\\'330.715\\' x=\\'-805.374\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-701.174\\' y=\\'330.715\\' ry=\\'16.873\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-1013.775\\' y=\\'427.324\\' ry=\\'16.873\\'/%3e%3crect ry=\\'16.873\\' y=\\'427.324\\' x=\\'-909.574\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-805.374\\' y=\\'427.324\\' ry=\\'16.873\\'/%3e%3crect ry=\\'16.873\\' y=\\'427.324\\' x=\\'-701.174\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect ry=\\'16.873\\' y=\\'427.324\\' x=\\'-1117.975\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect ry=\\'16.873\\' y=\\'523.934\\' x=\\'-1013.775\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-909.574\\' y=\\'523.934\\' ry=\\'16.873\\'/%3e%3crect ry=\\'16.873\\' y=\\'523.934\\' x=\\'-805.374\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-701.174\\' y=\\'523.934\\' ry=\\'16.873\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-1117.975\\' y=\\'523.934\\' ry=\\'16.873\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-1013.775\\' y=\\'620.544\\' ry=\\'16.873\\'/%3e%3crect ry=\\'16.873\\' y=\\'620.544\\' x=\\'-909.574\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-805.374\\' y=\\'620.544\\' ry=\\'16.873\\'/%3e%3crect ry=\\'16.873\\' y=\\'620.544\\' x=\\'-701.174\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect ry=\\'16.873\\' y=\\'620.544\\' x=\\'-1117.975\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect ry=\\'16.873\\' y=\\'330.715\\' x=\\'-1013.775\\' height=\\'66.581\\' width=\\'78.859\\'/%3e%3crect width=\\'78.859\\' height=\\'66.581\\' x=\\'-1117.975\\' y=\\'330.715\\' ry=\\'16.873\\'/%3e%3c/g%3e%3c/g%3e%3c/svg%3e'; export default svg; ","import htmlIcon from '../functions/htmlIcon';\n\nimport svg from '../uri-encoded-icons/location.svg.uri';\n\nexport default function locationIcon(message) {\n    return htmlIcon(svg, message);\n}\n","const svg = 'data:image/svg+xml,%3csvg height=\\'512\\' width=\\'512\\' xmlns=\\'http://www.w3.org/2000/svg\\'%3e%3cpath d=\\'M499.924 113.264C326.208 78.737 337.453 80.54 333.519 81.202c-1.258.21-16.676 3.309-52.613 10.496C265.84 48.254 224.507 16.977 176 16.977c-48.552 0-89.918 31.336-104.949 74.844L17.924 81.264C8.664 79.428 0 86.507 0 95.977v352a15 15 0 0012.076 14.712c172.248 34.236 160.971 32.026 162.113 32.165 3.622.445-7.572 2.297 161.82-31.582l158.067 31.417c9.265 1.839 17.924-5.252 17.924-14.712v-352a15.002 15.002 0 00-12.076-14.713zM176 46.977c44.663 0 81 36.336 81 81 0 37.683-60.298 133.338-81 164.989-20.679-31.616-81-127.298-81-164.989 0-44.664 36.337-81 81-81zM30 114.25l35.21 6.997c-.134 2.227-.21 4.469-.21 6.729 0 25.014 16.363 65.381 50.025 123.409 19.656 33.883 39.033 62.974 45.975 73.221v137.095L30 435.664zm161 210.356c6.941-10.247 26.319-39.337 45.975-73.221C270.637 193.357 287 152.99 287 127.977c0-2.304-.079-4.59-.218-6.859L321 114.273V435.68l-130 26zm291 137.096l-131-26.037V114.251l131 26.037z\\'/%3e%3cpath d=\\'M176 174.977c25.916 0 47-21.084 47-47s-21.084-47-47-47-47 21.084-47 47 21.084 47 47 47zm0-64c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z\\'/%3e%3c/svg%3e'; export default svg; ","import * as d3 from 'd3';\nimport L from 'leaflet';\nimport _ from 'underscore';\n\nconst GEO_JSON_LATITUDE = 1;\nconst GEO_JSON_LONGITUDE = 0;\n\nconst TOP_LEFT = 0;\nconst BOTTOM_RIGHT = 1;\n\nconst X = 0;\nconst Y = 1;\n\n/**\n * Use the function to connect points on a leaflet map\n * @example\n * let linePath = g\n *                .selectAll(\".locationsLine\")\n *                .data([geoJSON.features])\n *                .enter()\n *                .append(\"path\")\n *                .attr(\"class\", \"locationsLine\")\n *\n *\n * linePath.attr(\"d\", projectLine(leafletMap));\n *\n * @param {object} map Leaflet Map @see {}\n */\nexport function projectLine(map) {\n    return d3\n        .line()\n        .x(function (d) {\n            return getLayerPoint(d, map).x;\n        })\n        .y(function (d) {\n            return getLayerPoint(d, map).y;\n        })\n        .curve(d3.curveLinear);\n}\n\n/**\n * inputs a GeoJSON data and returns the projected leaflet svg point\n * coordinates\n *\n * @param {object} d GeoJSON Point @see {@link https://en.wikipedia.org/wiki/GeoJSON|GeoJSON}\n * @returns {object} Leaflet Point @see {@link https://leafletjs.com/reference-1.7.1.html#point|Leaflet_Point}\n */\nexport function getLayerPoint(d, map) {\n    var x = d.geometry.coordinates[GEO_JSON_LATITUDE];\n    var y = d.geometry.coordinates[GEO_JSON_LONGITUDE];\n    return map.latLngToLayerPoint(new L.LatLng(x, y));\n}\n\nexport function leafletTransform(transform) {\n    return d3.geoPath().projection(d3.geoTransform({ point: transform }));\n}\n\n/**\n * Fit svg to canvas to contain all the points\n *\n * @param {object} svg the svg d3 canvas to fit in Leaflet map\n * @param {*} bounds bounds of all the GeoJSON points\n */\nexport function fitSvg(svg, bounds) {\n    const widthHeightOffset = 120;\n    svg.attr(\n        'width',\n        bounds[BOTTOM_RIGHT][X] - bounds[TOP_LEFT][X] + widthHeightOffset\n    )\n        .attr(\n            'height',\n            bounds[BOTTOM_RIGHT][Y] - bounds[TOP_LEFT][Y] + widthHeightOffset\n        )\n        .style('left', bounds[TOP_LEFT][X] - 50 + 'px')\n        .style('top', bounds[TOP_LEFT][Y] - 50 + 'px');\n}\n\n/**\n * Check if p1 is p2 or in the square\n * with midpoint x1 and y1 and side length\n * tolerance\n *\n * @param {number[]} p1 point1 [x1, y1]\n * @param {number[]} p2 point2 [x2, y2]\n * @param {number} tolerance extends point 2 to a square of tolerance * p2, tolerance * p2\n */\nexport function passOver(p1, p2, tolerance = 0) {\n    const x_range = _.range(\n        parseInt(p2[X]) - tolerance,\n        parseInt(p2[X]) + tolerance\n    );\n    const y_range = _.range(\n        parseInt(p2[Y]) - tolerance,\n        parseInt(p2[Y]) + tolerance\n    );\n    if (\n        x_range.includes(parseInt(p1[X])) &&\n        y_range.includes(parseInt(p1[Y]))\n    ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nvar sqrt3 = Math.sqrt(3);\n\n// arrow =\n// export arrow {\n//   draw: function(context, size) {\n//     var y = -Math.sqrt(size / (sqrt3 * 3));\n//     context.moveTo(0, y * 2);\n//     context.lineTo(-sqrt3 * y, -y);\n//     context.lineTo(sqrt3 * y, -y);\n//     context.closePath();\n//   }\n// };\n","import React, { useRef, useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport * as d3 from \"d3\";\nimport \"leaflet.markercluster/dist/leaflet.markercluster\";\nimport \"leaflet.markercluster/dist/MarkerCluster.css\";\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\n\n/**\n * css\n */\nimport \"leaflet/dist/leaflet.css\";\nimport \"./TimeIndexedTypedLocation.css\";\n\n/**\n * Internal modules\n */\n\nimport CONFIG from \"./config\";\nimport { useMap, usePane } from \"../../base/ld-ui-hooks\";\nimport tITLPopup from \"./tITLPopup\";\nimport {\n    projectLine,\n    leafletTransform,\n    fitSvg,\n    getLayerPoint,\n    passOver,\n} from \"../../base/d3leaflet\";\nimport { getAngle } from \"../../base/math\";\n\n/* Define constants\n */\nconst GEO_JSON_LATITUDE = 1;\nconst GEO_JSON_LONGITUDE = 0;\nconst ORIGIN = 0;\nconst FIRST_ARROWHEAD = 1;\n\nconst D3_ZINDEX = 625; // over markers under tooltip and popup\n\n/**\n * @typedef TimeIndexedTypedLocation\n * @property {string} long longitude of the location as a string\n * @property {string} lat latitude of the location as a string\n * @property {string} startTime start time of the interval the indexed location\n * @property {string} endTime end time of the interval of the indexed location\n * @property {string} locationType the type of the location\n */\n\n/**\n * @description A component to show time indexed typed locations in a geographical map.\n *\n * @author Christian Colonna\n * @date 26-11-2020\n * @export\n * @component\n * @param {{ timeIndexedTypedLocations : TimeIndexedTypedLocation [], depiction : string } }\n */\nexport default function TimeIndexedTypedLocation({\n    styles = {\n        mapStyle: {\n            height: 500,\n            width: 500,\n        },\n        popupStyle: {},\n    },\n    timeIndexedTypedLocations,\n    cPropDepiction,\n    onObjectClick = () => {},\n}) {\n    /** mapRef */\n    const mapRef = useRef(null);\n\n    /** initialize map */\n    useMap(mapRef, {\n        url: CONFIG.MAP[CONFIG.DEFAULT_PROVIDER].PROVIDER,\n        attribution: CONFIG.MAP[CONFIG.DEFAULT_PROVIDER].ATTRIBUTION,\n    });\n    /** initialize d3 layer */\n    usePane(mapRef, \"d3-layer\", D3_ZINDEX);\n\n    /**\n     * This function is a d3 transform @see {@link https://github.com/d3/d3-geo/blob/v2.0.0/README.md#transforms|d3-transform} for further infos\n     *\n     * You can use it like this:\n\n     * @example\n     * var transform = d3.geoTransform({ point: projectPoint })\n     * var path = d3.geoPath(transform)\n     * \n     * You can now project points on an svg surface on a leaflet map\n     *\n     * @param {number} long Geojson point longitude\n     * @param {number} lat Geojson point latitude\n     */\n    function projectGeoPointToLeafletSvg(long, lat) {\n        var point = mapRef.current.latLngToLayerPoint(new L.LatLng(lat, long));\n        this.stream.point(point.x, point.y);\n    }\n    const path = leafletTransform(projectGeoPointToLeafletSvg);\n\n    useEffect(() => {\n        // check on Data // TODO: move this outside useEffect and return null such that user can decide to render another component\n        let geometries = true;\n        timeIndexedTypedLocations.forEach((tITL, index) => {\n            if (tITL.lat === \"\" || tITL.long === \"\") {\n                geometries = false;\n            }\n        });\n\n        if (geometries) {\n            /* Defining an svg layer for D3 \n        ________________________________*/\n\n            var svg = d3\n                .select(mapRef.current.getPane(\"d3-layer\"))\n                .append(\"svg\")\n                .attr(\"style\", \"position:relative\");\n\n            var g = svg.append(\"g\").attr(\"class\", \"leaflet-zoom-hide\");\n\n            /* Iterating over data:\n           - Creating markers and popup (Leaflet layer) \n           - Preparing GeoJSON          (D3 Layer)  \n        ___________________________________*/\n            const mcg = L.markerClusterGroup({\n                iconCreateFunction: (cluster) => {\n                    return L.divIcon({\n                        html: `${CONFIG.MARKER_ICON[1](\n                            cluster.getChildCount()\n                        )}`,\n                        className: \"cluster-icon\",\n                        iconAnchor: [15, 50],\n                    });\n                },\n            }).on(CONFIG.POPUP.OPEN_CLUSTER, function (e) {\n                e.layer.spiderfy();\n            });\n\n            let geoJSON = {\n                type: \"FeatureCollection\",\n                features: [],\n            };\n\n            sortByTime(timeIndexedTypedLocations);\n\n            timeIndexedTypedLocations.forEach((tITL, index) => {\n                geoJSON.features.push({\n                    type: \"Feature\",\n                    geometry: {\n                        type: \"Point\",\n                        coordinates: [\n                            parseFloat(tITL.long),\n                            parseFloat(tITL.lat),\n                        ],\n                    },\n                });\n\n                const markerPosition = [\n                    geoJSON.features[index].geometry.coordinates[\n                        GEO_JSON_LATITUDE\n                    ],\n                    geoJSON.features[index].geometry.coordinates[\n                        GEO_JSON_LONGITUDE\n                    ],\n                ];\n\n                const popupContent = {\n                    timeInterval: `${tITL.startTime} - ${\n                        tITL.endTime !== \"\" ? tITL.endTime : \"Today\"\n                    }`,\n                    locationType: tITL.locationTypeLabel, // at the moment we pass the uri TODO: pass the label\n                    culturalProperty:\n                        tITL.cPropLabel !== \"\"\n                            ? tITL.cPropLabel\n                            : \"Bene culturale\",\n                    address: tITL.addressLabel,\n                };\n                const popup = L.popup()\n                    .setContent(tITLPopup(popupContent))\n                    .setLatLng(markerPosition);\n\n                L.marker(markerPosition, {\n                    icon: CONFIG.MARKER_ICON[0],\n                })\n                    .addTo(mcg)\n                    .bindPopup(popup)\n                    .on(\"click\", function (e) {\n                        this.openPopup();\n                        const cProp = document.getElementsByClassName(\n                            \"cultural-property\"\n                        );\n                        console.log(cProp);\n                        cProp[0].style.cursor = \"pointer\";\n                        cProp[0].addEventListener(\"click\", function (e) {\n                            onObjectClick();\n                        });\n                    });\n            });\n\n            /* Add marker to maps and fit zoom\n        ___________________________________ */\n            mapRef.current.fitBounds(mcg.getBounds(), {\n                padding: [120, 120],\n                maxZoom: 6,\n            });\n            mapRef.current.addLayer(mcg);\n\n            /* Draw line connecting locations and arrowheads\n        _________________________________________________*/\n\n            let linePath = g\n                .selectAll(\".locationsLine\")\n                .data([geoJSON.features])\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", \"locationsLine\")\n                .attr(\"style\", `stroke:${CONFIG.ARROW.COLOR}`);\n\n            const arrowheads = g\n                .selectAll(\".arrowheads\")\n                .data(geoJSON.features)\n                .enter()\n                .append(\"svg:path\")\n                .attr(\"class\", \"arrowheads\")\n                .attr(\n                    \"d\",\n                    d3\n                        .symbol()\n                        .type(d3.symbolTriangle)\n                        .size(CONFIG.ARROW.ARROWHEAD_SIZE)\n                )\n                .style(\"stroke\", \"blue\")\n                .style(\"fill\", \"blue\");\n\n            // check if the depiction has been put between timeIndexTypedLocation pattern data\n            cPropDepiction = cPropDepiction\n                ? cPropDepiction\n                : timeIndexedTypedLocations[0].depiction;\n\n            const depiction = g\n                .append(\"svg:image\")\n                .attr(\"x\", -20)\n                .attr(\"y\", -20);\n            // .attr(\"height\", 120)\n            // .attr(\"width\", 60)\n            // .attr(\"xlink:href\", cPropDepiction);\n\n            let arrowheadsNodes;\n\n            mapRef.current.on(\"zoomend\", adaptD3Layer);\n            adaptD3Layer();\n\n            function adaptD3Layer() {\n                // Get bounding box of points / coordinates / data / markers in the map\n                const bounds = path.bounds(geoJSON),\n                    topLeft = bounds[0],\n                    bottomRight = bounds[1];\n\n                // Setting the size and location of the overall SVG container\n                fitSvg(svg, bounds);\n\n                // translate group\n                g.attr(\n                    \"transform\",\n                    `translate(${-topLeft[0] + 50},${-topLeft[1] + 50})`\n                );\n\n                depiction.attr(\"transform\", function () {\n                    var x =\n                        geoJSON.features[ORIGIN].geometry.coordinates[\n                            GEO_JSON_LONGITUDE\n                        ];\n                    var y =\n                        geoJSON.features[ORIGIN].geometry.coordinates[\n                            GEO_JSON_LATITUDE\n                        ];\n\n                    return `translate(${\n                        mapRef.current.latLngToLayerPoint(new L.LatLng(y, x)).x\n                    },${mapRef.current.latLngToLayerPoint(new L.LatLng(y, x)).y})`;\n                });\n\n                // make arrowheads transparent\n                arrowheadsNodes = arrowheads.nodes();\n                // make arrowheads transparent at first time\n                arrowheadsNodes.forEach((a) => {\n                    a.style.opacity = 0;\n                });\n\n                // translate and rotate arrowheads\n                arrowheads.attr(\"transform\", function (d, i) {\n                    if (i === ORIGIN) {\n                        return;\n                    }\n                    const rotationAngle = getAngle(\n                        arrowheadsNodes[i].__data__.geometry.coordinates,\n                        arrowheadsNodes[i - 1].__data__.geometry.coordinates\n                    );\n\n                    return `translate(${\n                        getLayerPoint(d, mapRef.current).x\n                    },${getLayerPoint(d, mapRef.current).y}) rotate(${rotationAngle})`;\n                });\n\n                // https://stackoverflow.com/a/25946400/12506641 check this for arc\n                linePath.attr(\"d\", projectLine(mapRef.current));\n\n                moveLine();\n            }\n\n            function moveLine() {\n                linePath\n                    .transition()\n                    .ease(d3.easeLinear)\n                    .duration(CONFIG.TRANSITION_DURATION)\n                    .attrTween(\"stroke-dasharray\", tweenDash);\n            }\n\n            function tweenDash() {\n                return function (t) {\n                    //total length of path (single value)\n                    const l = linePath.node().getTotalLength();\n                    const interpolate = d3.interpolateString(\n                        `0,${l}`,\n                        `${l},${l}`\n                    );\n\n                    // p is the point on the line (coordinates) at a given length\n                    // along the line. In this case if l=50 and we're midway through\n                    // the time then this would 25.\n                    const p = linePath.node().getPointAtLength(t * l);\n\n                    // if there's some arrow to appear\n                    if (arrowheadsNodes[FIRST_ARROWHEAD]) {\n                        const arrow = getLayerPoint(\n                            arrowheadsNodes[FIRST_ARROWHEAD].__data__,\n                            mapRef.current\n                        );\n                        const tolerance = 5;\n\n                        if (\n                            passOver([p.x, p.y], [arrow.x, arrow.y], tolerance)\n                        ) {\n                            arrowheadsNodes[FIRST_ARROWHEAD].style.opacity = 1; // make arrowhead visible\n                            arrowheadsNodes.splice(FIRST_ARROWHEAD, 1); // remove from arrowheads to appear\n                        }\n                    }\n\n                    //Move the image to that point\n                    depiction.attr(\"transform\", `translate(${p.x},${p.y})`);\n\n                    return interpolate(t);\n                };\n            }\n        }\n    }, []);\n\n    return (\n        <div>\n            <div id=\"map\" style={styles.mapStyle}></div>\n        </div>\n    );\n}\n\n/**\n * Sort the resources by time\n * modify the original array\n *\n * @param {Object[]} timeIndexedTypedLocations\n */\nfunction sortByTime(timeIndexedTypedLocations) {\n    timeIndexedTypedLocations.sort((a, b) => {\n        return parseInt(a.startTime) - parseInt(b.startTime);\n    });\n    return timeIndexedTypedLocations;\n}\n","import { useEffect } from \"react\"\n\n/**\n * Mount a pane to the Leaflet map.\n * You can mount a layer for d3 or other graphic libraries or FeatureGroups.\n *\n * @param {Object} mapRef a ref to a Leaflet map\n * @param {string} paneName a name for the pane\n * @param {number} paneZIndex default 450\n */\nexport function usePane(mapRef, paneName, paneZIndex = 450) {\n    useEffect(() => {\n        mapRef.current.createPane(paneName);\n        mapRef.current.getPane(paneName).style.zIndex = paneZIndex; // overlay-pane is 400 https://github.com/Leaflet/Leaflet/blob/v1.0.0/dist/leaflet.css#L87\n\n        mapRef.current.getPane(paneName).style.pointerEvents = \"none\";\n    }, []);\n}\n\n/**\n * Display a Leaflet map in react component\n *\n * @param {Object} mapRef\n * @param {Object} mapProvider\n * @param {string} mapProvider.url\n * @param {string} mapProvider.attribution\n */\nexport function useMap(mapRef, mapProvider) {\n    useEffect(() => {\n        /** mounts map */\n        mapRef.current = L.map(\"map\", {\n            center: [0, 0],\n            zoom: 1,\n            layers: [\n                L.tileLayer(mapProvider.url, {\n                    attribution: mapProvider.attribution,\n                }),\n            ],\n            zoomControl: false,\n            attributionControl: false,\n        });\n\n        return function cleanup() {\n            mapRef.current.remove();\n        };\n    }, []);\n}","//#DEFINE constants\nconst X = 0;\nconst Y = 1;\n\n/**\n * =*=*=*=*=*=*=*=*=*=*=*=*=\n *\n *   Cartesian Mathematics\n *\n * =*=*=*=*=*=*=*=*=*=*=*=*=\n */\n\n/**\n * Returns a control point for quadratic bezier distance\n * on the segment axis\n *\n * @param {number[]} coordinates_1 point A\n * @param {number[]} coordinates_2 point B\n * @param {number} heightWeight this number is multiplied by the unit to increase the round of the arc\n */\nexport default function getControlPoint(\n    coordinates_1,\n    coordinates_2,\n    heightWeight = 1\n) {\n    const UNIT = 1; // you can change this with a function\n    const m = getSlope(coordinates_1, coordinates_2);\n    const midPoint = getMidpoint(coordinates_1, coordinates_2);\n\n    console.log(coordinates_1, coordinates_2);\n    if (!m) {\n        return [midPoint[X] + heightWeight * UNIT, midPoint[Y]];\n    } else {\n        let controlPointX = midPoint[X] + heightWeight * UNIT;\n        return [controlPointX, segmentAxis(controlPointX, midPoint, m)];\n    }\n}\n\n/**\n * Given x returns y coordinates\n *\n * @param {number} x function input\n * @param {number[]} midPoint the midpoint coordinates of a segment\n * @param {*} m slope of axis\n */\nfunction segmentAxis(x, midPoint, m) {\n    return (-1 / m) * (x - midPoint[X]) + midPoint[Y];\n}\n\nfunction getMidpoint(coordinates_1, coordinates_2) {\n    return [\n        (coordinates_1[X] + coordinates_2[X]) / 2,\n        (coordinates_1[Y] + coordinates_2[Y]) / 2,\n    ];\n}\n\n/**\n * Computes the slope of a line given 2 points\n *\n * @param {number[]} coordinates_1 Point 1\n * @param {number[]} coordinates_2 Point 2\n */\nfunction getSlope(coordinates_1, coordinates_2) {\n    if (coordinates_1[X] === coordinates_2[X]) {\n        return undefined;\n    } else {\n        return (\n            (coordinates_2[Y] - coordinates_1[Y]) /\n            (coordinates_2[X] - coordinates_1[X])\n        );\n    }\n}\n\n/**\n * Gets two points and returns the angle they draw in a cartesian plan\n *\n * @param {number[]} p1 an array of x1, y1 coordinates\n * @param {number[]} p2 an array of x2, y2 coordinates\n */\nexport function getAngle(p1, p2) {\n    const diffY = p1[Y] - p2[Y];\n    const diffX = p1[X] - p2[X];\n    return Math.atan2(diffY, diffX) * (180 / Math.PI) - 90;\n}\n\n/**\n * @description Return log in base b of n\n * @author Christian Colonna\n * @date 02-12-2020\n * @export\n * @param {number} b base\n * @param {number} n number\n * @returns {number} the log in base b of n\n */\nexport function baseLog(b, n) {\n    return Math.log(n) / Math.log(b);\n}\n\n/**\n * @description Scale a number x (number in a range minD, maxD) projecting it to a range (minV, maxV)\n *              returns minV if result is not finite\n * @author Christian Colonna\n * @date 08-12-2020\n * @export\n * @param {number} x input value\n * @param {number} minD minimum value in data\n * @param {number} maxD max value in data\n * @param {number} minV minimum value x can be scaled\n * @param {number} maxV maximum value x can be scaled\n * @returns {number} scaled output\n */\nexport function scaleData(x, minD, maxD, minV, maxV) {\n    // log base\n    const b = Math.pow(maxD - minD, 1 / (maxV - minV));\n    const result = minV + baseLog(b, x - minD);\n    if (isFinite(result)) {\n        return result;\n    }\n    return minV;\n}\n\nexport function scaleInto01(x, min, max) {\n    return (x - min) / (max - min);\n}\n\nexport function decimalPlaces(num) {\n    var match = (\"\" + num).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n    if (!match) {\n        return 0;\n    }\n    return Math.max(\n        0,\n        // Number of digits right of decimal point.\n        (match[1] ? match[1].length : 0) -\n            // Adjust for scientific notation.\n            (match[2] ? +match[2] : 0)\n    );\n}\n","import React from \"react\";\n\nimport { extractLabelFromUri } from \"../../resources/extractLabelFromUri\";\n\nexport default function Entity(props) {\n    const flexFlow = props.entity.depiction\n        ? { flexFlow: \"column\" }\n        : { flexFlow: \"row\" };\n\n    return (\n        <article style={props.style.entityContainer}>\n            <div style={{ ...props.style.entityContent, ...flexFlow }}>\n                {props.entity.depiction && (\n                    <figure style={props.style.entityDepictionContainer}>\n                        <img\n                            src={props.entity.depiction}\n                            style={props.style.entityDepiction}\n                        ></img>\n                    </figure>\n                )}\n                <div style={props.style.entityLabel}>\n                    {props.entity.label\n                        ? props.entity.label\n                        : extractLabelFromUri(props.entity.entity)}\n                </div>\n            </div>\n        </article>\n    );\n}\n","/**\n * Return label from uri removing # and / namespaces\n *\n * @param {String} uri\n */\nexport function extractLabelFromUri(uri) {\n    let property = '';\n    let tmp = uri;\n    let tmp2 = tmp.split('#');\n    if (tmp2.length > 1) {\n        property = tmp2[1];\n    } else {\n        tmp2 = tmp.split('/');\n        property = tmp2[tmp2.length - 1];\n    }\n    return property;\n}\n","import React from \"react\";\nimport Entity from \"./Entity\";\n\n/**\n * @typedef Member\n * @property {string} uri the uri of the resource\n * @property {string} label label of the resource\n */\n\n/**\n * @description A component to render a collection of elements\n * @author Christian Colonna\n * @date 04-12-2020\n * @export\n * @param {Member[]} {members}\n * @returns {JSX.Element}\n */\nexport default function Collection({ members, styles, classes }) {\n    styles = { ...defaultStyles, ...styles };\n\n    return (\n        <div>\n            <section\n                style={{\n                    ...styles.collectionContainer,\n                    ...styles.collectionContainerWidth,\n                }}\n            >\n                {members.map((entity, i) => {\n                    return (\n                        <Entity\n                            entity={entity}\n                            key={i}\n                            style={styles.entity}\n                        ></Entity>\n                    );\n                })}\n            </section>\n        </div>\n    );\n}\n\nconst defaultStyles = {\n    collectionContainerWidth: {\n        width: \"150%\", // set this width to 120, 130, 140% to increase padding between items\n    },\n    collectionContainer: {\n        border: \"solid 1px black\",\n        margin: \"auto\",\n        padding: 5,\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fill, minmax(100px, 1fr))\",\n        gridGap: \"10px\",\n        borderRadius: \"9px/8px\",\n        border: \"1px solid rgba(0,0,0,0.15)\",\n        gridGap: 10,\n    },\n    entity: {\n        entityContainer: {\n            textAlign: \"center\",\n            paddingTop: \"100%\" /* padding trick directly on the grid item */,\n            boxSizing: \"border-box\",\n            position: \"relative\",\n        },\n        entityLabel: {},\n        entityContent: {\n            color: \"black\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            display: \"flex\",\n            flexFlow: \"column\",\n        },\n        entityDepiction: {\n            width: 60,\n            height: 60,\n            padding: 1,\n            borderRadius: 9999,\n            border: \"solid 1px black\",\n        },\n        entityLabel: {\n            color: \"black\",\n        },\n        entityDepictionContainer: {\n            \n        }\n    },\n};\n","const { PathFactory } = require(\"ldflex\");\nconst { default: ComunicaEngine } = require(\"@ldflex/comunica\");\n\n// The JSON-LD context for resolving properties\nconst context = {\n    \"@context\": {\n        \"@vocab\": \"http://xmlns.com/foaf/0.1/\",\n        friends: \"knows\",\n        label: \"http://www.w3.org/2000/01/rdf-schema#label\",\n        depiction: \"depiction\",\n    },\n};\n\n// The query engine and its source\nconst queryEngine = new ComunicaEngine({\n    type: \"sparql\",\n    value: \"https://arco.istc.cnr.it/visualPatterns/sparql\", //<== TODO : get this dynamically\n});\n\n// The object that can create new paths\nconst path = new PathFactory({ context, queryEngine });\n\nexport default path;\n","import React, { useState, useEffect } from \"react\";\n\nconst { namedNode } = require(\"@rdfjs/data-model\");\nimport path from \"./EndpointConfig\";\n\nexport default function Depiction({\n    uri,\n    classes,\n    onLoadedDepiction,\n    onClick,\n    depiction = null,\n    style = {},\n    label,\n    placeholderImg = \"https://semantic-ui.com/images/wireframe/image.png\",\n}) {\n    const [image, setImage] = useState(depiction);\n\n    const cProp = path.create({\n        subject: namedNode(uri),\n    });\n\n    // run this effect if depiction is loaded\n    if (onLoadedDepiction) {\n        useEffect(() => {\n            onLoadedDepiction();\n        }, [image]);\n    }\n\n    useEffect(() => {\n        if (!image) {\n            (async function fetchDepiction() {\n                const image = await cProp.depiction;\n                setImage(image);\n            })();\n        }\n    }, []);\n\n    return (\n        <div>\n            <img\n                onClick={onClick}\n                src={image ? image : placeholderImg}\n                className={classes}\n                style={style}\n            />\n            {label && label}\n        </div>\n    );\n}\n","import React from \"react\";\n\nexport default function Resource({\n    resource,\n    style = {},\n    classes,\n    depiction,\n    label,\n    onClick,\n}) {\n    return (\n        <div style={style} className={classes} onClick={onClick}>\n            {depiction && depiction}\n            {label && label}\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\n\nconst { namedNode } = require(\"@rdfjs/data-model\");\n\nimport path from \"./EndpointConfig\";\n\nexport default function Label({ uri, text = null, classes, style = {} }) {\n    const [label, setLabel] = useState(text);\n\n    const cProp = path.create({\n        subject: namedNode(uri),\n    });\n\n    useEffect(() => {\n        if (!label) {\n            (async function fetchLabel() {\n                const label = await cProp.label.value;\n                setLabel(label);\n            })();\n        }\n    }, []);\n\n    return label ? (\n        <div className={classes} style={style}>\n            {label}\n        </div>\n    ) : null;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Depiction from \"../../resources/Depiction\";\nimport Resource from \"../../resources/Resource\";\nimport Label from \"../../resources/Label\";\n\nimport \"./PartWhole.css\";\n\n// https://codesandbox.io/s/circles-76sfz?file=/src/App.js\n// https://stackoverflow.com/a/62466233/12506641\n\n/**\n * @typedef Resource\n * @property {string} uri the id of a resource\n */\n\n/**\n * @description\n * @author Christian Colonna\n * @date 26-11-2020\n * @export\n * @param {{ parts : Resource[], whole : Resource }} { parts, whole }\n */\nexport default function PartWhole({\n    parts,\n    whole,\n    onResourceClick = (e) => {},\n    styles = {\n        containerStyle: {\n            width: 700,\n        },\n        littleItemStyle: {\n            width: 100,\n        },\n        centerItemStyle: {\n            width: 500,\n        },\n    },\n}) {\n    const circleContainer = useRef(null);\n\n    const [depictionCount, setDepictionCount] = useState(0);\n\n    useEffect(() => {\n        let circle = circleContainer.current;\n        const circleElements = circle.querySelectorAll(\".circle\");\n\n        let angle = 360 - 90;\n        let dangle = 360 / circleElements.length;\n\n        for (let i = 0; i < circleElements.length; i++) {\n            let circleElement = circleElements[i];\n            angle += dangle;\n            circleElement.style.transform = `rotate(${angle}deg) translate(${\n                circle.clientWidth / 2\n            }px) rotate(-${angle}deg)`;\n        }\n    }, [depictionCount]);\n\n    const partWidth = styles.littleItemStyle.width;\n    const wholeWidth = styles.containerStyle.width;\n    const imgWidth = styles.centerItemStyle.width;\n\n    const partStyle = {\n        width: partWidth,\n        height: partWidth,\n    };\n\n    const wholeContainerStyle = {\n        width: wholeWidth,\n        height: wholeWidth,\n    };\n\n    const centerStyle = {\n        width: imgWidth,\n        height: imgWidth,\n        margin: \"auto\",\n        /* top: 0; */\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    };\n\n    const labelStyle = {\n        // position: \"relative\",\n        left: -partWidth / 2,\n        top: partWidth,\n    };\n\n    const centerLabelStyle = {\n        top: imgWidth - 50,\n    };\n\n    //  TODO change this to redux , to many calls! Or find a pattern to optimize callings!\n    const onLoadedDepiction = () => {\n        setDepictionCount(depictionCount + 1);\n    };\n\n    return (\n        <div\n            className=\"circular-container\"\n            ref={circleContainer}\n            style={wholeContainerStyle}\n            classes={\"center\"}\n        >\n            {parts.map((part) => {\n                return (\n                    <Resource\n                        classes={\"circle\"}\n                        style={partStyle}\n                        onClick={() => {\n                            onResourceClick(part.uri);\n                        }}\n                        depiction={\n                            <Depiction\n                                style={partStyle}\n                                classes={\"part-whole-depiction part-depiction\"}\n                                uri={part.uri}\n                                placeholderImg={part.placeholder}\n                                onLoadedDepiction={onLoadedDepiction}\n                                depiction={part.depiction}\n                                label={\n                                    <Label\n                                        uri={part.uri}\n                                        text={part.label}\n                                        classes={\"part-whole-label\"}\n                                        style={{\n                                            ...labelStyle,\n                                            ...defaultItemLabelStyle,\n                                            ...styles.itemLabel,\n                                        }}\n                                    />\n                                }\n                            />\n                        }\n                    />\n                );\n            })}\n            <div style={centerStyle}>\n                <Resource\n                    classes=\"center\"\n                    style={centerStyle}\n                    onClick={() => {\n                        onResourceClick(whole.uri);\n                    }}\n                    depiction={\n                        <Depiction\n                            style={centerStyle}\n                            classes={\"part-whole-depiction whole-depiction\"}\n                            uri={whole.uri}\n                            depiction={whole.depiction}\n                            placeholderImg={whole.placeholder}\n                            onLoadedDepiction={onLoadedDepiction}\n                            label={\n                                <Label\n                                    uri={whole.uri}\n                                    classes=\"part-whole-whole-label\"\n                                    text={whole.label}\n                                    style={{\n                                        ...centerLabelStyle,\n                                        ...defaultCenterLabelStyle,\n                                        ...styles.centerLabel,\n                                    }}\n                                />\n                            }\n                        />\n                    }\n                />\n            </div>\n        </div>\n    );\n}\n\nconst defaultItemLabelStyle = {\n    minWidth: 300,\n    backgroundColor: \"white\",\n    border: \"1px solid black\",\n    padding: 5,\n};\nconst defaultCenterLabelStyle = {\n    minWidth: 300,\n    backgroundColor: \"white\",\n    padding: 5,\n    border: \"1px solid black\",\n};\n","import React from \"react\"\nimport { Collection } from \"linked-data-ui\"\n\nexport function CollectionExample() {\n    \t\n    const members = [\n    {\n        uri: \"https://arco.istc.cnr.it/ns/Measurement/0100373430-0-1-height\",\n        label: \"430 mm\",\n        depiction: \"http://cdn.onlinewebfonts.com/svg/img_534766.png\"\n    },\n    {\n        uri: \"https://arco.istc.cnr.it/ns/HistoricOrArtisticProperty/0100373430-0\",\n        label: \"311 mm\",\n        depiction:\"http://cdn.onlinewebfonts.com/svg/img_534766.png\"\n    },\n]\n\nconst defaultCollectionStyle = {\n    collectionContainerWidth: {\n        width: '100%' // set this width to 120, 130, 140% to increase padding between items\n    },\n};\n\n    return <Collection members={members} styles={defaultCollectionStyle} />\n}","import React from \"react\"\nimport { Collection } from \"linked-data-ui\"\n\nexport function CollectionExample2() {\n    \t\n    const members = [\n    {\n        // uri: \"https://arco.istc.cnr.it/ns/Measurement/0100373430-0-1-height\",\n        label: \"John Doe\",\n        depiction: \"https://semantic-ui.com/images/avatar/large/elliot.jpg\"\n    },\n    {\n        // uri: \"https://arco.istc.cnr.it/ns/HistoricOrArtisticProperty/0100373430-0\",\n        label: \"Mary Jane\",\n        depiction:\"https://semantic-ui.com/images/avatar/large/jenny.jpg\"\n    },\n    {\n        // uri: \"https://arco.istc.cnr.it/ns/HistoricOrArtisticProperty/0100373430-0\",\n        label: \"Bill Clinton\",\n        depiction:\"https://semantic-ui.com/images/avatar/large/joe.jpg\"\n    },\n]\n\nconst defaultCollectionStyle = {\n    collectionContainerWidth: {\n        width: '100%' // set this width to 120, 130, 140% to increase padding between items\n    },\n    entity: {\n        entityContainer: {\n            width: 140,\n            textAlign: \"center\",\n            boxSizing: \"border-box\",\n            position: \"relative\",\n\n        },\n        entityDepiction: {\n            width: 120,\n            padding: 5,\n            borderRadius: 9999,\n        },\n        entityDepictionContainer: {\n            margin: 0\n        }\n    }\n};\n\n    return <Collection members={members} styles={defaultCollectionStyle} />\n}","import React from \"react\"\nimport { TimeIndexedTypedLocation } from \"linked-data-ui\"\n\nexport function TimeIndexedTypedLocationExample() {\n\n    const titlPrevious = {\n        addressLabel: \"ITALIA, Piemonte, TO, Torino\",\n        cPropLabel: \"'casa da pigione' (disegno architettonico) di Promis Carlo (sec. XIX, secondo quarto)\",\n        culturalProperty: \"https://arco.istc.cnr.it/ns/HistoricOrArtisticProperty/0100374098-0\",\n        endTime: \"1953\",\n        lat: \"45.0122379\",\n        locationType: \"https://w3id.org/arco/ontology/location/PreviousLocation\",\n        locationTypeLabel: \"Luogo di provenienza / Collocazione precedente\",\n        long: \"7.5177153\",\n        startTime: \"1942/ante\",\n        tITLLabel: \"Altra localizzazione 1 del bene: 0100374098-0\",\n        titl: \"https://arco.istc.cnr.it/ns/TimeIndexedTypedLocation/0100374098-0-alternative-1\",\n    }\n\n    const titlCurrent = {\n        addressLabel: \"ITALIA, Piemonte, TO, Torino\",\n        cPropLabel: \"'casa da pigione' (disegno architettonico) di Promis Carlo (sec. XIX, secondo quarto)\",\n        culturalProperty: \"https://arco.istc.cnr.it/ns/HistoricOrArtisticProperty/0100374098-0\",\n        endTime: \"\",\n        lat: \"45.071629\",\n        locationType: \"https://w3id.org/arco/ontology/location/CurrentPhysicalLocation\",\n        locationTypeLabel: \"Localizzazione fisica attuale\",\n        long: \"7.68634\",\n        startTime: \"\",\n        tITLLabel: \"Localizzazione fisica attuale del bene: 0100374098-0\",\n        titl: \"https://arco.istc.cnr.it/ns/TimeIndexedTypedLocation/0100374098-0-current\",\n    }\n\n    const titls = [titlPrevious, titlCurrent]\n\n    return <TimeIndexedTypedLocation timeIndexedTypedLocations={titls} />\n\n}","import React from \"react\"\n\nimport { PartWhole } from \"linked-data-ui\"\n\nexport function PartWholeExample() {\n    const whole = {\n        uri: \"https://en.wikipedia.org/wiki/Car\",\n        depiction: \"http://www.newdesignfile.com/postpic/2010/10/free-vector-car_144621.jpg\",\n        label: \"A car (or automobile) is a wheeled motor vehicle used for transportation. Most definitions of cars say that they run primarily on roads, seat one to eight people, have four wheels, and mainly transport people rather than goods.\"\n    }\n    const parts = [\n\n        {\n            uri: \"https://simple.wikipedia.org/wiki/Wheel\",\n            depiction: \"https://webstockreview.net/images/wheel-clipart-9.jpg\",\n            label: \"A wheel is a disc or circle-shaped mechanical device. Its main purpose is to allow things to roll; in other words, the wheel spins, and object on the wheels moves more easily along the ground. It is a simple machine.\"\n        },\n        {\n            uri: \"https://en.wikipedia.org/wiki/Steering_wheel\",\n            depiction: \"https://clipground.com/images/steering-wheel-vector-png-8.png\",\n            label: \"A steering wheel (also called a driving wheel or a hand wheel) is a type of steering control in vehicles.\"\n        },\n        {\n            uri: \"https://en.wikipedia.org/wiki/Engine\",\n            depiction: \"https://img.etsystatic.com/il/46e084/1228375422/il_570xN.1228375422_346b.jpg?version=0\",\n            label: \"An engine or motor is a machine designed to convert one form of energy into mechanical energy.\"\n        },\n    ]\n\n    const defaultPartWholeStyle = {\n        containerStyle: {\n            width: 400\n        },\n        littleItemStyle: {\n            width: 80\n        },\n        centerItemStyle: {\n            width: 250\n        }\n    };\n\n    return <PartWhole parts={parts} whole={whole} styles={defaultPartWholeStyle}/>\n} ","import React from \"react\"\nimport { Header, Grid, Segment } from \"semantic-ui-react\"\n\nimport {CollectionExample} from \"./examples/CollectionExample\"\nimport {CollectionExample2} from \"./examples/CollectionExample2\"\nimport {TimeIndexedTypedLocationExample} from \"./examples/TimeIndexedTypedLocationExample\"\nimport {PartWholeExample} from \"./examples/PartWholeExample\"\n\nconst style = {\n  h1: {\n    marginTop: '3em',\n  },\n  h2: {\n    margin: '4em 0em 2em',\n  },\n  h3: {\n    marginTop: '2em',\n    padding: '2em 0em',\n  },\n  last: {\n    marginBottom: '300px',\n  },\n}\n\nexport function VisualFrameExamples() {\n    return <div>\n            <Header as='h3' content='Visual Frame Examples' style={style.h3} textAlign='center' />\n            <Grid container columns={2} stackable>\n              <Grid.Column>\n                <Segment>\n                  <Header as='h4' content='Measurement Collection' style={style.h3} textAlign='center' />\n                  <CollectionExample />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>\n                  <Header as='h4' content='People Collection' style={style.h3} textAlign='center' />\n                  <CollectionExample2 />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>\n                  <Header as='h4' content='Time Indexed Typed Locations' style={style.h3} textAlign='center' />\n                  <TimeIndexedTypedLocationExample />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>\n                  <Header as='h4' content='Car Parts' style={style.h3} textAlign='center' />\n                  <PartWholeExample />\n                </Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>Content</Segment>\n              </Grid.Column>\n              <Grid.Column>\n                <Segment>Content</Segment>\n              </Grid.Column>\n            </Grid>\n        </div>\n}","import React from 'react'\nimport 'linked-data-ui/dist/index.css'\nimport 'semantic-ui-css/semantic.min.css'\nimport { VisualFrameExamples } from './pages/VisualFrameExamples'\n\nconst App = () => {\n  return <VisualFrameExamples />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}